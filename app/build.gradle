apply plugin: 'com.android.application'

def config = rootProject.ext
android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        applicationId "cn.berfy.looking"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner config.testInstrumentationRunner
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构
            abiFilters "armeabi-v7a", "x86","x86_64"
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        debug {
        }

        release {
            storeFile file('../buildsystem/looking_keystore.jks')
            storePassword "cplasf2011"
            keyAlias "Berfy"
            keyPassword "cplasf2011"
            v2SigningEnabled false
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    //区分名字
                    def fileName
                    if (variant.buildType.name.equals('release')) {
                        fileName = "Looking_v${defaultConfig.versionName}_release.apk"
                    } else if (variant.buildType.name.equals('debug')) {
                        fileName = "Looking_v${defaultConfig.versionName}_debug.apk"
                    }
                    def outputFile = output.outputFile
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }
    }

    //----------------------lint检查----------------------
    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:appcompat-v7:26.+'
    compile project(':framework')
    compile project(':uikit')
    compile project(':pr')
    compile 'com.android.support:multidex:1.0.1'
    //Fresco
    compile 'com.facebook.fresco:fresco:0.12.+'
    // 在 API < 14 上的机器支持 WebP 时，需要添加
    compile 'com.facebook.fresco:animated-base-support:0.12.0'
}

//优化拆包最大方法数不大于48000
afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--set-max-idx-number=48000'
    }
}
